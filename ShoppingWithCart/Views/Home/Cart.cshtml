@model IEnumerable<ShoppingWithCart.ViewModel.ProductDetailsVM>
@{
    ViewBag.Title = "Cart";
}
<style>
    .cartitembox {
        border-bottom: 1px solid #f4f4f4;      
    }

    #prodInfo > h6 {
        font-weight: 400;
        line-height: 0px;
        
    }
    #prodInfo > h5 {
        margin: auto;
    }

    .center {
        width: 130px;
        margin: 0px;
    }
</style>



        

    
@if (Model.Count() != 0)
{
    <div class="row" id="cartPage">
            <div class="col-md-9 col-lg-9">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <h2 class="box-title"> Your Cart</h2>
                    </div>
                @foreach (var item in Model)
                {
                    <script>
                        $(document).ready(function () {
                            load(@item.productId, @item.Quantity);
                        });
                    </script>
                    <div id="cartitembox_@item.productId" class="box-body cartitembox">
                        <div class="row">
                            <div class="col-md-2 col-sm-3 col-xs-3">
                                <img src="@item.imagePath" width="58" height="120" border="0" alt="Product Image" style="padding:0px;" />
                            </div>
                            <div class="col-md-7 col-sm-4 col-xs-4" id="prodInfo">
                                <h5>@item.productName</h5>

                                <h6>Price : ₹@string.Format("{0:#,0}", item.price)</h6>
                                <h6>Category : @item.categoryName</h6>
                                <h6>Quantity : </h6>
                                <div class="center">
                                    <p></p>

                                    <div class="input-group">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-default btn-number" disabled="disabled" data-type="minus" data-field="quant[@item.productId]">
                                                <span class="glyphicon glyphicon-minus"></span>
                                            </button>
                                        </span>
                                        <input type="text" name="quant[@item.productId]" class="form-control input-number" value="@item.Quantity" min="1" max="10" id-field="@item.productId">
                                        <span class="input-group-btn">
                                            <button type="button" class="btn btn-default btn-number" data-type="plus" data-field="quant[@item.productId]">
                                            
                                                <span class="glyphicon glyphicon-plus"></span>
                                            </button>
                                        </span>
                                    </div>

                                    @*<div class="input-group">
            <span class="input-group-btn">
                <button type="button" class="btn btn-default btn-number" onclick="DecreaseProductAmount(@item.productId)">
                    <span class="glyphicon glyphicon-minus"></span>
                </button>
            </span>
            <input type="text" class="form-control input-number" value="@item.Quantity" id="inputQuantitybox_@item.productId">
            <span class="input-group-btn">
                <button type="button" class="btn btn-default btn-number" onclick="IncreaseProductAmount(@item.productId)">
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
            </span>
        </div>*@

                                </div>
                            </div>
                            <div class="col-md-3 col-sm-2 col-xs-2">
                                <a class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" onclick="RemoveFromCart(@item.productId)">Remove Item </a>  
                            </div>
                        </div>
                    </div>
                }
                 </div>
            </div>


            <div class="col-md-3 col-lg-3">          
                <div class="box box-warning">
                    <div class="box-header with-border">
                        <h3 class="box-title">Amount</h3>
                        <div class="box-tools pull-right">
                            <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>

                        </div><!-- /.box-tools -->
                    </div><!-- /.box-header -->
                    @{ var total = 0;}
                    @foreach (var itm in Model)
                    {
                    <div class="box-body" style="display: block;" id="cartAmountitembox_@itm.productId">

                        @itm.productName  x <span id="ItemQuantity_@itm.productId"> @itm.Quantity</span> = ₹<span id="ItemPrice_@itm.productId"> @string.Format("{0:#,0}",itm.Quantity * itm.price)</span>
                        @{total += (itm.Quantity * itm.price);}
                    </div><!-- /.box-body -->
                    }
                        <div class="box-body" style="display: block;">
                    <hr />
                            Total Amount = ₹<span id="totalAmount"></span>
                        </div><!-- /.box-body -->
                

                </div><!-- /.box -->
            </div>
            <a href="/Home/PlaceOrder" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--colored">Place Order </a>
    </div>
}

else{<h3> Your Cart is Empty </h3>}

    
<script>
    //plugin bootstrap minus and plus
    //http://jsfiddle.net/laelitenetwork/puJ6G/
    $('.btn-number').click(function (e) {
        e.preventDefault();

        fieldName = $(this).attr('data-field');
        type = $(this).attr('data-type');
        var input = $("input[name='" + fieldName + "']");
        var currentVal = parseInt(input.val());
        if (!isNaN(currentVal)) {
            if (type == 'minus') {

                if (currentVal > input.attr('min')) {
                    input.val(currentVal - 1).change();
                }
                if (parseInt(input.val()) == input.attr('min')) {
                    $(this).attr('disabled', true);
                }

            } else if (type == 'plus') {

                if (currentVal < input.attr('max')) {
                    input.val(currentVal + 1).change();
                }
                if (parseInt(input.val()) == input.attr('max')) {
                    $(this).attr('disabled', true);
                }

            }
        } else {
            input.val(0);
        }
    });
    $('.input-number').focusin(function () {
        $(this).data('oldValue', $(this).val());
    });
    $('.input-number').change(function () {

        minValue = parseInt($(this).attr('min'));
        maxValue = parseInt($(this).attr('max'));
        valueCurrent = parseInt($(this).val());
        productId = $(this).attr('id-field');
        //console.log("Inside plus and minus  input number product id = ", productId);
        if (valueCurrent >= minValue && valueCurrent <= maxValue) {
            //console.log("Current Value", valueCurrent);
            SetProductQuantity(productId, valueCurrent);
        }
        

        name = $(this).attr('name');
        if (valueCurrent >= minValue) {
            $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            //console.log("Current Value", valueCurrent);
        } else {
            alert('Sorry, the minimum value was reached');
            $(this).val($(this).data('oldValue'));
            //console.log("Current Value", valueCurrent);
        }
        if (valueCurrent <= maxValue) {
            $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            //console.log("Current Value", valueCurrent);
        } else {
            alert('Sorry, the maximum value was reached');
            $(this).val($(this).data('oldValue'));
        }


    });
    $(".input-number").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right
            (e.keyCode >= 35 && e.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number and stop the keypress
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

    function load(id,quantity) {
        console.log('called', id)
        minValue = 1;
        maxValue = 10;
        valueCurrent = quantity;
        productId = id;
       
        name ="quant[" + id + "]";
        if (valueCurrent >= minValue) {
            $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr('disabled')
            //console.log("Current Value", valueCurrent);
        } else {
            alert('Sorry, the minimum value was reached');
            $(this).val($(this).data('oldValue'));
            //console.log("Current Value", valueCurrent);
        }
        if (valueCurrent <= maxValue) {
            $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr('disabled')
            //console.log("Current Value", valueCurrent);
        } else {
            alert('Sorry, the maximum value was reached');
            $(this).val($(this).data('oldValue'));
        }
    }

</script>

